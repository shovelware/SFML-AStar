Let s = the starting node, g = goal or destination node
Let pq = a new priority queue
Initialise d[s] to 0  
For each node v in graph G
	Initialise d[v] to infinity // don’t yet know the distances to these nodes

Add s to the pq
Mark(s)
While the queue is not empty AND pq.top() != g
	For each child node c of pq.top()
	
        If (c != previous(pq.top()) // don’t go back to a predecessor
		
	        Let distC = w(pq.top(), c) + d[pq.top]
			
            If ( distC < d[c] )
				let d[c] = distC
                Set previous pointer of c to pq.top()
            End if
		   
  	        If (notMarked(c))
		          Add c to the pq 
		          Mark(c)
			End if
			
		End if
	End for
   Remove pq.top()	
End while